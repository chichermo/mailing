[1mdiff --git a/components/Dashboard.tsx b/components/Dashboard.tsx[m
[1mindex e464f7f..4303dc7 100644[m
[1m--- a/components/Dashboard.tsx[m
[1m+++ b/components/Dashboard.tsx[m
[36m@@ -35,6 +35,7 @@[m [mexport default function Dashboard({ onTabChange }: DashboardProps) {[m
     emailsSent: 0[m
   })[m
   const [loading, setLoading] = useState(true)[m
[32m+[m[32m  const [importing, setImporting] = useState(false)[m
 [m
   // Load real statistics[m
   const loadStats = async () => {[m
[36m@@ -81,6 +82,34 @@[m [mexport default function Dashboard({ onTabChange }: DashboardProps) {[m
     loadStats()[m
   }, [])[m
 [m
[32m+[m[32m  const importDanceEmails = async () => {[m
[32m+[m[32m    try {[m
[32m+[m[32m      setImporting(true)[m
[32m+[m[32m      console.log('🚀 Dashboard: Starting dance emails import...')[m
[32m+[m[41m      [m
[32m+[m[32m      const response = await fetch('/api/import-dance-emails', {[m
[32m+[m[32m        method: 'POST'[m
[32m+[m[32m      })[m
[32m+[m[41m      [m
[32m+[m[32m      const result = await response.json()[m
[32m+[m[41m      [m
[32m+[m[32m      if (result.success) {[m
[32m+[m[32m        console.log('✅ Dashboard: Import successful:', result.message)[m
[32m+[m[32m        // Reload stats to show updated contact count[m
[32m+[m[32m        await loadStats()[m
[32m+[m[32m        alert(`Import completed successfully!\n${result.message}`)[m
[32m+[m[32m      } else {[m
[32m+[m[32m        console.error('❌ Dashboard: Import failed:', result.error)[m
[32m+[m[32m        alert(`Import failed: ${result.error}`)[m
[32m+[m[32m      }[m
[32m+[m[32m    } catch (error) {[m
[32m+[m[32m      console.error('❌ Dashboard: Import error:', error)[m
[32m+[m[32m      alert(`Import error: ${error instanceof Error ? error.message : 'Unknown error'}`)[m
[32m+[m[32m    } finally {[m
[32m+[m[32m      setImporting(false)[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m
   const handleQuickAction = (tab: string) => {[m
     if (onTabChange) {[m
       onTabChange(tab)[m
[36m@@ -231,6 +260,23 @@[m [mexport default function Dashboard({ onTabChange }: DashboardProps) {[m
                 <EnvelopeIcon className="w-5 h-5 mr-3 group-hover:scale-110 transition-transform duration-200" />[m
                 Create Template[m
               </button>[m
[32m+[m[32m              <button[m[41m [m
[32m+[m[32m                onClick={importDanceEmails}[m
[32m+[m[32m                className="w-full btn-success group"[m
[32m+[m[32m                disabled={importing}[m
[32m+[m[32m              >[m
[32m+[m[32m                {importing ? ([m
[32m+[m[32m                  <>[m
[32m+[m[32m                    <div className="w-5 h-5 mr-3 border-2 border-white border-t-transparent rounded-full animate-spin"></div>[m
[32m+[m[32m                    Importing...[m
[32m+[m[32m                  </>[m
[32m+[m[32m                ) : ([m
[32m+[m[32m                  <>[m
[32m+[m[32m                    <RocketLaunchIcon className="w-5 h-5 mr-3 group-hover:scale-110 transition-transform duration-200" />[m
[32m+[m[32m                    Import Dance Emails[m
[32m+[m[32m                  </>[m
[32m+[m[32m                )}[m
[32m+[m[32m              </button>[m
             </div>[m
           </div>[m
         </div>[m
